------------------------------------------QUERY TIENDA INTRO BASE DE DATOS VIDEO 3-----------------------------------------

CUANO GENERAMOS CONSULTAS PARA ORDENAR, FILTRAR Y EXTRAER DATOS 
DE UNA BASE DE DATOS. ESTAMOS HABLANDO DE DML (LENGUAJE DE MANIPULACIÓN 
DE DATOS | DATA MANIPULATION LANGUAGE). ESTAS ACCIONES SE REALIZAN A TRAVÉS
DE SELECT, INSERT, UPDATE Y DELETE. 

//CONSULTAR UNA TABLA 
    SELECT * FROM Fabricante;

//CREAMOS UNA COLUMNA NUEVA EN LA TABLA FABRICANTE
    ALTER TABLE `tienda_simple`.`fabricante` ADD COLUMN `nacionalidad` VARCHAR(100) NULL AFTER `nombre`;

//AGREGAMOS VALORES A LA NUEVA COLUMNA 
UPDATE `tienda_simple`.`fabricante` SET `nacionalidad` = 'CHINA' WHERE (`codigo` = '1');
UPDATE `tienda_simple`.`fabricante` SET `nacionalidad` = 'CHINA' WHERE (`codigo` = '2');
UPDATE `tienda_simple`.`fabricante` SET `nacionalidad` = 'CHINA' WHERE (`codigo` = '3');
UPDATE `tienda_simple`.`fabricante` SET `nacionalidad` = 'CHINA' WHERE (`codigo` = '4');
UPDATE `tienda_simple`.`fabricante` SET `nacionalidad` = 'JAPON' WHERE (`codigo` = '5');
UPDATE `tienda_simple`.`fabricante` SET `nacionalidad` = 'JAPON' WHERE (`codigo` = '6');
UPDATE `tienda_simple`.`fabricante` SET `nacionalidad` = 'JAPON' WHERE (`codigo` = '7');
UPDATE `tienda_simple`.`fabricante` SET `nacionalidad` = 'JAPON' WHERE (`codigo` = '8');
UPDATE `tienda_simple`.`fabricante` SET `nacionalidad` = 'COREA DEL SUR' WHERE (`codigo` = '9');

//SELECCIONA LOS VALORES DONDE "CODIGO" ES IGUAL A 3
    SELECT * FROM FABRICANTE WHERE CODIGO = 3;

//TRAE UNA ÚNICA COLUMNA (NOMBRE) DONDE EL "CODIGO" ES IGUAL A 5
    SELECT NOMBRE FROM FABRICANTE WHERE CODIGO = 5;

//TRAE DOS COLUMNAS (CODIGO, NOMBRE) DONDE EL 'COD' ES IGUAL A 5
    SELECT CODIGO, NOMBRE FROM FABRICANTE WHERE CODIGO = 5;

//TRAE LOS 3 CAMPOS O COLUMNAS DE LA TABLA FABRICANTE DONDE EL 'COD' ES IGUAL A 5
    SELECT CODIGO, NOMBRE, NACIONALIDAD FROM FABRICANTE WHERE CODIGO = 5;

    SELECT *FROM FABRICANTE WHERE CODIGO = 7;

//SELECCIONA LOS FABRICANTES QUE TIENE CODIGO MENOR A 7
    SELECT *FROM FABRICANTE WHERE CODIGO < 7;

//TRAE LOS FABRICANTES EN DONDE EL NOMBRE ES IGUAL A 'LENOVO'
    SELECT *FROM FABRICANTE WHERE NOMBRE = 'Lenovo';

//TRAE LOS FABRICANTES EN DONDE LA NACIONALIDAD ES IGUAL A 'CHINA'
    SELECT * FROM FABRICANTE WHERE NACIONALIDAD = 'CHINA';

//TRAE LOS FABRICANTES EN DONDE LA NACIONALIDAD ES IGUAL A 'CHINA' Y EL NOMBRE ES IGUAL A 'ASUS'
    SELECT * FROM FABRICANTE WHERE NACIONALIDAD = 'CHINA' AND NOMBRE = 'Asus';

//TRAE LOS FABRICANTES EN DONDE LA NACIONALIDAD ES IGUAL A 'JAPON' O DE NACIONALIDAD DE 'COREA DEL SUR'
    SELECT * FROM FABRICANTE WHERE NACIONALIDAD = 'JAPON' OR NACIONALIDAD = 'COREA DEL SUR';

//COUNT CUENTA LA CANTIDAD DE REGISTROS DE UNA TABLA. TRAE LA CANTIDAD DE REGRISTROS DE LA TABLA FABRICANTE
    SELECT COUNT(*) FROM FABRICANTE;

//TRAE LA CANTIDAD DE REGISTROS QUE TIENEN NACIONALIDAD 'JAPON'
    SELECT COUNT(*) FROM FABRICANTE WHERE NACIONALIDAD = 'JAPON';

//MAX TRAE EL MAXIMO CODIGO. EL MÁXIMO DE LA TABLA FABRICNATE ES 9
    SELECT MAX(CODIGO) FROM FABRICANTE;

//MIN TRAE EL MÍNIMO CODIGO. EL MÍNIMO DE LA TABLA FABRICNATE ES 1
    SELECT MIN(CODIGO) FROM FABRICANTE;

//TRAE LOS FABRICANTES QUE TIENEN EL CÓDIGO 3 Y 5
    SELECT * FROM FABRICANTE WHERE CODIGO IN (3,5);

//LIKE ES SIMILAR A INDEX OF EN JAVA. TRAE LOS REGISTROS DONDE EL NOMBRE TENGA EN SU INTERIOR LA LETRA S Y U, ES DECIR LA CADENA 'SU'
    SELECT * FROM FABRICANTE WHERE NOMBRE LIKE '%su%';

//TRAE LOS REGISTROS DONDE EL NOMBRE COMIENZE CON LA CADENA 'SUS'
    SELECT * FROM FABRICANTE WHERE NOMBRE LIKE 'sus%';

//TRAE LOS REGISTROS DONDE EL NOMBRE FINALIZE CON LA CADENA 'SUS'
    SELECT * FROM FABRICANTE WHERE NOMBRE LIKE '%sus';

 //TRAE LOS REGISTROS QUE ESTÁN ENTRE EL CÓDIGO 2 Y 7
    SELECT * FROM FABRICANTE WHERE CODIGO BETWEEN 2 AND 7;