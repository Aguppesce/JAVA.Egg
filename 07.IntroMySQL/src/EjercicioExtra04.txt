//1. Mostrar el nombre de todos los jugadores ordenados alfabéticamente. 
    SELECT nombre FROM jugadores order by nombre;

//2. Mostrar  el  nombre  de  los  jugadores  que  sean  pivots  (‘C’)  y  que  pesen  más  de  200 libras, ordenados por nombre alfabéticamente. 
    SELECT nombre FROM jugadores WHERE jugadores.posicion = 'C' AND jugadores.peso > 200 ORDER BY nombre;

//3. Mostrar el nombre de todos los equipos ordenados alfabéticamente. 
    SELECT nombre FROM equipos ORDER BY nombre;

//4. Mostrar el nombre de los equipos del este (East). 
    SELECT nombre FROM equipos WHERE equipos.conferencia = 'East';

//5. Mostrar  los  equipos  donde  su  ciudad  empieza  con  la  letra  ‘c’,  ordenados  por nombre. 
    SELECT * FROM equipos WHERE equipos.ciudad LIKE 'C%' ORDER BY equipos.nombre;

//6. Mostrar todos los jugadores y su equipo ordenados por nombre del equipo. 
    SELECT * FROM jugadores j INNER JOIN equipos e ON j.nombre_equipo = e.nombre ORDER BY e.nombre;

//7. Mostrar todos los jugadores del equipo “Raptors” ordenados por nombre.
    SELECT * FROM jugadores j INNER JOIN equipos e ON j.nombre_equipo = e.nombre AND e.nombre = 'Raptors'  ORDER BY j.nombre;

//8. Mostrar los puntos por partido del jugador ‘Pau Gasol’. 
    SELECT e.puntos_por_partido, j.nombre FROM estadisticas e INNER JOIN jugadores j ON e.jugador = j.codigo WHERE j.nombre = 'Pau Gasol';

//9. Mostrar los puntos por partido del jugador ‘Pau Gasol’ en la temporada ’04/05′. 
    SELECT e.puntos_por_partido, j.nombre FROM estadisticas e INNER JOIN jugadores j ON e.jugador = j.codigo WHERE j.nombre = 'Pau Gasol' AND e.temporada = '04/05';

//10. Mostrar el número de puntos de cada jugador en toda su carrera. 
    SELECT ROUND(SUM(e.puntos_por_partido)), j.nombre FROM estadisticas e INNER JOIN jugadores j ON e.jugador = j.codigo GROUP BY j.nombre;
    
//11. Mostrar el número de jugadores de cada equipo.
    SELECT COUNT(j.nombre_equipo), e.nombre FROM jugadores j INNER JOIN equipos e ON j.nombre_equipo = e.nombre  GROUP BY j.nombre_equipo;
    SELECT j.nombre_equipo, COUNT(*) FROM jugadores j GROUP BY j.nombre_equipo;

//12. Mostrar el jugador que más puntos ha realizado en toda su carrera. 
     SELECT t.nombre, ROUND(puntos) FROM (SELECT j.nombre, SUM(e.Puntos_por_partido) AS puntos FROM jugadores j, estadisticas e WHERE j.codigo = e.jugador GROUP BY j.nombre ORDER BY j.nombre) t WHERE t.puntos = (SELECT MAX(t2.puntos) FROM (SELECT j.nombre, SUM(e.Puntos_por_partido) AS puntos FROM jugadores j, estadisticas e WHERE j.codigo = e.jugador GROUP BY j.nombre ORDER BY j.nombre) t2);

//13. Mostrar el nombre del equipo, conferencia y división del jugador más alto de la NBA. 
    SELECT j.nombre AS jugaodr, e.nombre AS equipo, e.conferencia, e.division FROM equipos e, jugadores j WHERE e.nombre = j.nombre_equipo AND j.altura=(SELECT MAX(altura) from jugadores);

//14. Mostrar la media de puntos en partidos de los equipos de la división Pacific. 
    SELECT AVG(puntos) FROM (SELECT SUM(puntos_local) AS puntos FROM partidos WHERE equipo_local IN (SELECT nombre FROM equipos WHERE LOWER(division) = 'pacific') UNION SELECT SUM(puntos_visitante) AS puntos FROM partidos WHERE equipo_visitante IN (SELECT nombre FROM equipos WHERE LOWER(division) = 'pacific')) t;

//15. Mostrar el partido o partidos (equipo_local, equipo_visitante y diferencia) con mayor diferencia de puntos. 
    
//16. Mostrar la media de puntos en partidos de los equipos de la división Pacific. 
    SELECT AVG(puntos) FROM (SELECT SUM(puntos_local) AS puntos FROM partidos WHERE equipo_local IN (SELECT nombre FROM equipos WHERE lower(division) = 'pacific') UNION SELECT SUM(puntos_visitante) AS puntos FROM partidos WHERE equipo_visitante IN (SELECT nombre FROM equipos WHERE LOWER(division) = 'pacific'))t;

17. Mostrar los puntos de cada equipo en los partidos, tanto de local como de visitante.  
18. Mostrar quien gana en cada partido (codigo, equipo_local, equipo_visitante, 
equipo_ganador), en caso de empate sera null.
